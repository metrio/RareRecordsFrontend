[{"/Users/metrio/RareRecordsFrontend/src/Redux/actions.js":"1","/Users/metrio/RareRecordsFrontend/src/Components/NavBar.js":"2","/Users/metrio/RareRecordsFrontend/src/Components/WishlistCards.js":"3","/Users/metrio/RareRecordsFrontend/src/Containers/Wishlist.js":"4","/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js":"5","/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js":"6","/Users/metrio/RareRecordsFrontend/src/Containers/Profile.js":"7","/Users/metrio/RareRecordsFrontend/src/Components/EditForm.js":"8","/Users/metrio/RareRecordsFrontend/src/Components/SignUpForm.js":"9","/Users/metrio/RareRecordsFrontend/src/App.js":"10","/Users/metrio/RareRecordsFrontend/src/Components/SearchForm.js":"11","/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js":"12","/Users/metrio/RareRecordsFrontend/src/Components/OwnerLogInForm.js":"13","/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js":"14","/Users/metrio/RareRecordsFrontend/src/Containers/HomePage.js":"15","/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js":"16","/Users/metrio/RareRecordsFrontend/src/Components/RecordCard.js":"17","/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js":"18","/Users/metrio/RareRecordsFrontend/src/Containers/OwnerProfile.js":"19"},{"size":8692,"mtime":1611513295416,"results":"20","hashOfConfig":"21"},{"size":3280,"mtime":1611503484481,"results":"22","hashOfConfig":"21"},{"size":850,"mtime":1611446671195,"results":"23","hashOfConfig":"21"},{"size":2401,"mtime":1611439192969,"results":"24","hashOfConfig":"21"},{"size":871,"mtime":1611442655027,"results":"25","hashOfConfig":"21"},{"size":2168,"mtime":1611512841357,"results":"26","hashOfConfig":"21"},{"size":1511,"mtime":1611440223517,"results":"27","hashOfConfig":"21"},{"size":1233,"mtime":1611439653161,"results":"28","hashOfConfig":"21"},{"size":1276,"mtime":1611439756721,"results":"29","hashOfConfig":"21"},{"size":4623,"mtime":1611513190166,"results":"30","hashOfConfig":"21"},{"size":942,"mtime":1610408902152,"results":"31","hashOfConfig":"21"},{"size":3492,"mtime":1611332861141,"results":"32","hashOfConfig":"21"},{"size":1036,"mtime":1611443172865,"results":"33","hashOfConfig":"21"},{"size":1020,"mtime":1611000541608,"results":"34","hashOfConfig":"21"},{"size":176,"mtime":1610845159310,"results":"35","hashOfConfig":"21"},{"size":657,"mtime":1610850645610,"results":"36","hashOfConfig":"21"},{"size":2427,"mtime":1611333390763,"results":"37","hashOfConfig":"21"},{"size":1354,"mtime":1611330250266,"results":"38","hashOfConfig":"21"},{"size":660,"mtime":1611503713250,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"11fgsaq",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/metrio/RareRecordsFrontend/src/Redux/actions.js",["84"],"import { ADD_TO_WISHLIST , REMOVE_FROM_WISHLIST, ADD_TO_RECORDS, UPDATE_RECORD_DETAILS , SET_RECORDS, SET_WISHLIST, LOG_IN, SIGN_UP, LOG_OUT, RETURNING, DELETE_USER, EDIT_USER, RECORD_DETAILS, OWNER_LOG_IN, RETURNING_OWNER, OWNER_LOG_OUT} from './actionTypes'\nimport {URL} from '../index'\n\n\nexport function loginUser(userObj) {\n  return function(dispatch, getState){\n      fetch(`${URL}/login`, {\n          method: \"POST\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n          .then(r => r.json())\n          .then(checkedUserObj => {\n              localStorage.setItem(\"token\", checkedUserObj.jwt)\n              localStorage.setItem(\"user\", checkedUserObj.user)   \n\n              dispatch({type: LOG_IN, payload: checkedUserObj.user})\n          })\n          .catch(console.log)\n  }\n}\n\n\nexport function signupUser(userObj) {\n  return function (dispatch, getState) {\n      fetch(`${URL}/users`, {\n          method: \"POST\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n          .then(r => r.json())\n          .then(newUserObj => {\n              localStorage.setItem(\"token\", newUserObj.jwt)\n              dispatch({type: SIGN_UP, payload: newUserObj.user})\n          })\n          .catch(console.log)\n  }\n}\n\n  export function returningUser(userObj) {\n    const wishlistRecords = userObj.records\n    return dispatch => {\n        dispatch({type: RETURNING, payload: userObj}) \n        dispatch(setWishlist(wishlistRecords))\n        }\n    } \n\n\nexport function deleteUser(userId){\n  return function (dispatch){\n      fetch(`${URL}/users/${userId}`, {\n          method: \"DELETE\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\",\n              \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\")\n          }\n      })\n      .then(r=>r.json())\n      .then(response => {\n          localStorage.clear()\n          dispatch({type: DELETE_USER})\n      })\n  }\n}\n\nexport function editUser(userObj, userId){\n  return function (dispatch){\n      fetch(`${URL}/users/${userId}`, {\n          method: \"PATCH\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\",\n              \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n      .then(r=>r.json())\n      .then(returnedUser => {\n          dispatch({type: EDIT_USER, payload: returnedUser.user})\n      })\n  }\n}\n\n\n\nexport function loggingOut(){\n  return { type: LOG_OUT}\n}\n\n export function newRecordWishlist (userId, recordObj) {\n     return function (dispatch, getState) {\n        \n         fetch(`${URL}/records`, {\n             method: \"POST\",\n             headers: {\n                 \"Accepts\": \"application/json\",\n                 \"Content-Type\": \"application/json\"\n             },\n             body: JSON.stringify({\n                 album_name: recordObj.album_name,\n                 artist_name: recordObj.artist_name,\n                 discogs_id: parseInt(recordObj.discogs_id),\n                 thumb_url: recordObj.thumb_url,\n                 img_url: recordObj.img_url,\n                 year_of_release: parseInt(recordObj.year_of_release)\n             })\n         })\n         .then(r => r.json())\n         .then(record => {\n            record[\"notes\"] = recordObj.notes\n            record[\"resource_url\"] = recordObj.resource_url\n            record[\"format\"] = recordObj.formats\n            record[\"catno\"] = recordObj.catno\n            record[\"label\"] = recordObj.label\n            record[\"country\"] = recordObj.country\n            \n            dispatch(addtoRecordsaddtoWishlist(userId, record))\n        })\n     }\n} \n\nexport function addtoRecordsaddtoWishlist(userId, record){\n    return dispatch => {\n        dispatch({type: ADD_TO_RECORDS, payload: record})\n        dispatch(addtoWishlist(userId, record))\n    }\n}\n\n\nexport function addtoWishlist(userId, recordDetails) {\n    return function (dispatch, getState) {        \n            fetch(`${URL}/users/${userId}/wishlists/`, {\n                method: \"POST\",\n                headers: {\n                    \"Accepts\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: parseInt(userId) ,\n                    discogs_id: parseInt(recordDetails.discogs_id) ,\n                    record_id: parseInt(recordDetails.id),\n                    notes: recordDetails.notes\n                })\n            })\n            .then(r => r.json())\n            .then(wishlistObj => {\n                console.log(recordDetails)\n                dispatch({type: ADD_TO_WISHLIST, payload: recordDetails})\n            })\n        }\n    }\n\n\nexport function removeFromWishlist(userId, wishlistId, recordId) {\n    return function(dispatch, getState) {\n        fetch(`${URL}/users/${userId}/wishlists/${wishlistId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            dispatch({type: REMOVE_FROM_WISHLIST, payload: recordId})\n            console.log(resp)\n        })\n    }\n}\n\nexport function setWishlist(wishlistRecords) {\n    return function (dispatch, getState){\n            dispatch({type: SET_WISHLIST, payload: wishlistRecords})\n    }\n\n}\n\n\nexport function setRecords() {\n    return function (dispatch, getState){\n        fetch(`${URL}/records`,{\n            method: \"GET\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(r=> r.json())\n            .then(records => {\n               localStorage.setItem(\"recordId\", records.id)\n              return dispatch({type: SET_RECORDS, payload: records})\n           })\n        \n    }\n}\n\nexport function recordDetails(recordObj) {\n\n    return function (dispatch, getState){\n\n        fetch(`https://api.discogs.com/masters/${recordObj.discogs_id}`)\n        .then(resp => resp.json())\n        .then(details => {\n            recordObj[\"tracklist\"] = details.tracklist\n            return dispatch({type: RECORD_DETAILS, payload: recordObj})\n        })\n    }\n}\n        \n\nexport function addtoRecords(recordObj) {\n    return function (dispatch, getState) {\n\n        fetch(`${URL}/records`, {\n            method: \"POST\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                 album_name: recordObj.record_name,\n                 artist_name: recordObj.artist_name,\n                 discogs_id: parseInt(recordObj.discogs_id),\n                 thumb_url: recordObj.thumb_url,\n                 img_url: recordObj.img_url,\n                 year_of_release: parseInt(recordObj.year_of_release)\n            })\n        })\n        .then(r => r.json())\n        .then(record => {\n                 record[\"notes\"] = recordObj.notes\n                 record[\"resource_url\"] = recordObj.resource_url\n                 record[\"format\"] = recordObj.formats\n                 record[\"catno\"] = recordObj.catno\n                 record[\"label\"] = recordObj.label\n                 record[\"country\"] = recordObj.country\n            return dispatch({type: ADD_TO_RECORDS, payload: record})\n        })\n        \n    }\n}\n\nexport function loginOwner(ownerObj) {\n    return function(dispatch, getState){\n        fetch(`${URL}/owner-login`, {\n            method: \"POST\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({ owner: ownerObj })\n        })\n            .then(r => r.json())\n            .then(checkedOwnerObj => {\n                localStorage.setItem(\"token\", checkedOwnerObj.jwt)  \n                localStorage.setItem(\"owner\", checkedOwnerObj.owner)  \n\n                dispatch({type: OWNER_LOG_IN, payload: checkedOwnerObj.owner})\n  \n            })\n            .catch(console.log)\n    }\n  }\n\n  export function ownerReturning(ownerObj) {\n    return dispatch => {\n        dispatch({type: RETURNING_OWNER, payload: ownerObj}) \n        }\n    } \n\n    export function ownerlogOut(){\n        return { type: OWNER_LOG_OUT}\n      }\n\n","/Users/metrio/RareRecordsFrontend/src/Components/NavBar.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/WishlistCards.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/Wishlist.js",["85","86","87"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport WishlistCard from '../Components/WishlistCards';\nimport { recordDetails, removeFromWishlist, editWishlistObj } from '../Redux/actions'\n\n\nclass Wishlist extends React.Component {\n\n  state = {\n    userWishlist: []\n  }\n\n  componentDidMount = () => {\n    this.setState({userWishlist: this.props.user.wishlists})\n  }\n\n  matchWishlistRecord = (recordObj) => {\n    const userWishlist = this.state.userWishlist\n\n    console.log(userWishlist)\n\n    if (userWishlist.length === 0){\n      return null\n    } else {\n      const foundWishlist = userWishlist.find(wishlist => wishlist.record_id === recordObj.id)\n      return foundWishlist\n    }\n  }\n\n  moreDetails = (recordObj) => {\n    let location = this.props.routerProps.history\n    const artist = recordObj.artist_name.replace(/\\s+/g, '-')\n    const album = recordObj.album_name.replace(/\\s+/g, '-')\n    \n    location.replace(`/records/${artist}/${album}`)\n    \n\n    console.log(\"In Wishlist: \", recordObj)\n    \n    this.props.recordDetails(recordObj)\n  }\n\n\n  removeFromWishlist = (record) => {\n    const foundWishlist = this.matchWishlistRecord(record)\n    \n    this.props.removeFromWishlist(this.props.user.id, foundWishlist.id, record.id)\n  }\n\n  wishlistPreview = () => {\n    const wishlistRecords = this.props.wishlists\n\n    return wishlistRecords.map(recordEl => <WishlistCard key={recordEl.id} recordEl={recordEl} submitHandler={this.moreDetails} removeHandler={this.removeFromWishlist} editWishlistObj={this.editWishlistObj}/>)\n  }\n\n\n\n    render () {\n      const user = this.props.user\n    \n        return (\n          <>\n\n          { user \n            ?\n            <div className=\"wishlist\">\n              <h1>Your Wishlist!</h1>\n              {this.wishlistPreview()}\n            </div>\n            :\n            <h1>Loading</h1>\n          }\n          \n          </>\n            \n        )\n      } \n    }\n\n    function msp(state) {\n        return {\n          user: state.user,\n          wishlists: state.wishlists\n        }\n      }\n\n    function mdp(dispatch){\n      return{\n        recordDetails: (recordObj) => dispatch(recordDetails(recordObj)),\n        removeFromWishlist:  (userId, wishlistId, recordId) => dispatch(removeFromWishlist(userId, wishlistId, recordId))\n      }\n    }\n\n\nexport default connect(msp, mdp)(Wishlist);",["88","89"],"/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js",[],"/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/Profile.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/EditForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/SignUpForm.js",[],["90","91"],"/Users/metrio/RareRecordsFrontend/src/App.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/SearchForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js",["92","93"],"/Users/metrio/RareRecordsFrontend/src/Components/OwnerLogInForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js",[],["94","95"],"/Users/metrio/RareRecordsFrontend/src/Containers/HomePage.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js",["96","97","98","99"],"import React from 'react';\nimport SearchForm from '../Components/SearchForm';\nimport RecordCard from '../Components/RecordCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n\nclass RecordStore extends React.Component {\n\n    \n\n    render () {\n      \n    \n        return (\n          \n          <div>\n              <h1>Rare Records Store</h1>\n              \n          </div>\n            \n        )\n      } \n    }\n\n    function msp(state) {\n        return {\n          user: state.user,\n          wishlists: state.wishlists,\n          records: state.records\n        }\n      }\n\nexport default connect(msp)(RecordStore);","/Users/metrio/RareRecordsFrontend/src/Components/RecordCard.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/OwnerProfile.js",[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":66,"nodeType":"102","messageId":"103","endLine":1,"endColumn":87},{"ruleId":"100","severity":1,"message":"104","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":23},{"ruleId":"100","severity":1,"message":"106","line":5,"column":45,"nodeType":"102","messageId":"103","endLine":5,"endColumn":60},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"100","severity":1,"message":"104","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":4,"column":17,"nodeType":"102","messageId":"103","endLine":4,"endColumn":23},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"100","severity":1,"message":"115","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"116","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":4,"column":17,"nodeType":"102","messageId":"103","endLine":4,"endColumn":23},"no-unused-vars","'UPDATE_RECORD_DETAILS' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'editWishlistObj' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],["117"],["118"],"'SearchForm' is defined but never used.","'RecordCard' is defined but never used.","no-global-assign","no-unsafe-negation"]