[{"/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js":"1","/Users/metrio/RareRecordsFrontend/src/Components/RecordDetailForm.js":"2","/Users/metrio/RareRecordsFrontend/src/Redux/actions.js":"3","/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js":"4","/Users/metrio/RareRecordsFrontend/src/App.js":"5","/Users/metrio/RareRecordsFrontend/src/Containers/OwnerDiscogsSearch.js":"6","/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js":"7","/Users/metrio/RareRecordsFrontend/src/Containers/FormContainer.js":"8","/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js":"9","/Users/metrio/RareRecordsFrontend/src/Components/RecordStoreCards.js":"10","/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js":"11","/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js":"12"},{"size":1020,"mtime":1611000541608,"results":"13","hashOfConfig":"14"},{"size":5962,"mtime":1611719307503,"results":"15","hashOfConfig":"14"},{"size":13437,"mtime":1611722433862,"results":"16","hashOfConfig":"14"},{"size":3072,"mtime":1611707823745,"results":"17","hashOfConfig":"14"},{"size":5454,"mtime":1611722496495,"results":"18","hashOfConfig":"14"},{"size":2474,"mtime":1611706049786,"results":"19","hashOfConfig":"14"},{"size":904,"mtime":1611707435075,"results":"20","hashOfConfig":"14"},{"size":1668,"mtime":1611718470767,"results":"21","hashOfConfig":"14"},{"size":821,"mtime":1611721938990,"results":"22","hashOfConfig":"14"},{"size":663,"mtime":1611722838280,"results":"23","hashOfConfig":"14"},{"size":3601,"mtime":1611614576554,"results":"24","hashOfConfig":"14"},{"size":4126,"mtime":1611630717701,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11fgsaq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/RecordDetailForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Redux/actions.js",["53"],"/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js",[],"/Users/metrio/RareRecordsFrontend/src/App.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/OwnerDiscogsSearch.js",["54","55","56"],"import React from 'react';\nimport SearchForm from '../Components/SearchForm';\nimport RecordCard from '../Components/RecordCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { recordDetails } from '../Redux/actions'\nimport OwnerRecordCard from '../Components/OwnerRecordCard';\n\nclass OwnerDiscogsSearchContainer extends React.Component {\n\n    state = {\n        data: [],\n        results: 0\n      }\n\n  discogsRecordSearch = (searchObj) => {\n    const token = process.env.REACT_APP_DISCOGS_API_KEY\n    const artist = searchObj.artist_name\n    const record = searchObj.record_name\n    \n    const url = `https://api.discogs.com/database/search?artist=${artist}&release_title=${record}&format=vinyl&token=${token}`\n\n    this.componentDidMount(url)\n  }\n\n  componentDidMount = (url) => {\n    fetch(`${url}`)\n    .then(resp => resp.json())\n    .then( query => {\n      console.log(query.pagination.items)\n      const items = query.pagination.items\n\n      this.setState({data: query.results , results: items})\n    })\n  }\n\n\n  moreDetails = (recordObj) => {\n    this.props.recordDetails(recordObj)\n    \n    let location = this.props.routerProps.history\n    const artist = recordObj.artist_name.replace(/\\s+/g, '-')\n    const album = recordObj.album_name.replace(/\\s+/g, '-')\n    \n    location.push(`/records/${artist}/${album}`)\n  }\n\n  addtoRecordStore = (recordObj) => {\n      this.props.recordDetails(recordObj)\n      \n      let location = this.props.routerProps.history\n      location.push('/recorddetails-form')\n  }\n   \n\n  render () {\n    const { data } = this.state\n\n    return (\n      <span className=\"search-page\">\n          <h1> {data.length > 0 ? data[0].title : null} </h1>\n\n        <div className=\"Record-Container\">\n          {data.map(recordEl => <OwnerRecordCard key={recordEl.id} recordObj={recordEl} addtoRecordStore={this.addtoRecordStore} moreDetails={this.moreDetails}/>)}\n        </div>\n\n        <div className=\"Search-Container\">\n          <h2>Number of Results: {this.state.results}</h2>\n          <SearchForm  submitHandler={this.discogsRecordSearch}/>\n        </div>\n      </span>  \n    )\n  } \n}\n\nfunction msp(state) {\n    return {\n      owner: state.owner,\n      records: state.records,\n      details: state.details\n    }\n  }\n  \n  function mdp(dispatch){\n    return{\n      recordDetails: (recordObj) => dispatch(recordDetails(recordObj))\n    }\n  }\n\nexport default connect(msp, mdp)(OwnerDiscogsSearchContainer);",["57","58"],"/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/FormContainer.js",["59"],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/RecordStoreCards.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js",["60","61"],"import React from 'react';\nimport SearchForm from '../Components/SearchForm';\nimport RecordCard from '../Components/RecordCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { addtoWishlist, addtoRecords, newRecordWishlist, recordDetails} from '../Redux/actions'\n\nclass RecordDiscogsSearchContainer extends React.Component {\n\n    constructor(props) {\n      super(props)\n      console.log(props)\n      this.state = {\n        data: [],\n        results: 0\n      }\n    }\n\n  discogsRecordSearch = (searchObj) => {\n    const token = process.env.REACT_APP_DISCOGS_API_KEY\n    const artist = searchObj.artist_name\n    const record = searchObj.record_name\n    console.log(this)\n    \n    const url = `https://api.discogs.com/database/search?artist=${artist}&release_title=${record}&format=vinyl&token=${token}`\n\n    this.fetchRecord(url)\n  }\n\n\n  fetchRecord = async (url) => {\n    fetch(`${url}`)\n      .then(resp => resp.json())\n      .then( query => {\n        console.log(query.pagination.items)\n        const items = query.pagination.items\n\n        this.setState({data: query.results , results: items})\n      })\n  }\n\n  \n  /** Double Checks to see if we already have the record in the backend,\n   * if it does then we just add right to the wishlist,\n   * if not then we add to the backend then we add to our wishlist\n   */\n  submitAlbum = (details) => {\n    const recordList = this.props.records\n    const foundRecordArray = recordList.filter(recordEl => recordEl.discogs_id === details.discogs_id)\n    const user = this.props.user\n   \n    if(foundRecordArray.length > 0){\n\n      foundRecordArray[0][\"notes\"] = details.notes\n      foundRecordArray[0][\"resource_url\"] = details.resource_url\n      foundRecordArray[0][\"format\"] = details.formats\n      foundRecordArray[0][\"catno\"] = details.catno\n      foundRecordArray[0][\"label\"] = details.label\n      foundRecordArray[0][\"country\"] = details.country\n\n      const foundRecord = foundRecordArray[0]\n       \n      this.props.addtoWishlist(user.id, foundRecord)\n    } else {\n       this.props.newRecordWishlist(user.id, details)\n    }\n  }  \n\n  moreDetails = (recordObj) => {\n    let location = this.props.routerProps.history\n    const artist = recordObj.artist_name.replace(/\\s+/g, '-')\n    const album = recordObj.album_name.replace(/\\s+/g, '-')\n    \n    location.replace(`/records/${artist}/${album}`)\n    \n    this.props.recordDetails(recordObj)\n  }\n   \n\n  render () {\n    const { data } = this.state\n\n    return (\n      <span className=\"search-page\">\n          <h1> {data.length > 0 ? data[0].title : null} </h1>\n\n        <div className=\"Record-Container\">\n          {data.map(recordEl => <RecordCard key={recordEl.id} recordObj={recordEl} submitHandler={this.submitAlbum} moreDetails={this.moreDetails}/>)}\n        </div>\n\n        <div className=\"Search-Container\">\n          <h2>Number of Results: {this.state.results}</h2>\n          <SearchForm  submitHandler={this.discogsRecordSearch}/>\n        </div>\n      </span>  \n    )\n  } \n}\n\nfunction msp(state) {\n    return {\n      user: state.user,\n      wishlists: state.wishlists,\n      records: state.records\n    }\n  }\n  \n  function mdp(dispatch){\n    return{\n      addtoWishlist: (userId, record) => dispatch(addtoWishlist(userId, record)),\n      addtoRecords: (details) => dispatch(addtoRecords(details)),\n      newRecordWishlist: (userId, recordDetails) => dispatch(newRecordWishlist(userId, recordDetails)),\n      recordDetails: (recordObj) => dispatch(recordDetails(recordObj))\n\n    }\n  }\n\nexport default connect(msp, mdp)(RecordDiscogsSearchContainer);","/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js",[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":277,"nodeType":"64","messageId":"65","endLine":1,"endColumn":295},{"ruleId":"62","severity":1,"message":"66","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":18},{"ruleId":"62","severity":1,"message":"67","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},{"ruleId":"62","severity":1,"message":"68","line":4,"column":17,"nodeType":"64","messageId":"65","endLine":4,"endColumn":23},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"62","severity":1,"message":"73","line":4,"column":60,"nodeType":"64","messageId":"65","endLine":4,"endColumn":71},{"ruleId":"62","severity":1,"message":"67","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},{"ruleId":"62","severity":1,"message":"68","line":4,"column":17,"nodeType":"64","messageId":"65","endLine":4,"endColumn":23},"no-unused-vars","'UPDATE_RECORDSTORE' is defined but never used.","Identifier","unusedVar","'RecordCard' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"'exitDetails' is defined but never used.","no-global-assign","no-unsafe-negation"]