[{"/Users/metrio/RareRecordsFrontend/src/App.js":"1","/Users/metrio/RareRecordsFrontend/src/Components/RecordCard.js":"2","/Users/metrio/RareRecordsFrontend/src/Components/SearchForm.js":"3","/Users/metrio/RareRecordsFrontend/src/index.js":"4","/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js":"5","/Users/metrio/RareRecordsFrontend/src/reportWebVitals.js":"6","/Users/metrio/RareRecordsFrontend/src/Redux/actions.js":"7","/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js":"8","/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js":"9","/Users/metrio/RareRecordsFrontend/src/Components/NavBar.js":"10","/Users/metrio/RareRecordsFrontend/src/Containers/Profile.js":"11","/Users/metrio/RareRecordsFrontend/src/Containers/HomePage.js":"12","/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js":"13","/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js":"14","/Users/metrio/RareRecordsFrontend/src/Components/SignUpForm.js":"15","/Users/metrio/RareRecordsFrontend/src/Components/EditForm.js":"16","/Users/metrio/RareRecordsFrontend/src/Containers/Wishlist.js":"17","/Users/metrio/RareRecordsFrontend/src/Components/WishlistCards.js":"18","/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js":"19"},{"size":3495,"mtime":1611090779107,"results":"20","hashOfConfig":"21"},{"size":2300,"mtime":1610745912789,"results":"22","hashOfConfig":"21"},{"size":942,"mtime":1610408902152,"results":"23","hashOfConfig":"21"},{"size":866,"mtime":1611004791642,"results":"24","hashOfConfig":"21"},{"size":2234,"mtime":1611111657638,"results":"25","hashOfConfig":"21"},{"size":362,"mtime":1610377951182,"results":"26","hashOfConfig":"21"},{"size":6026,"mtime":1611113178049,"results":"27","hashOfConfig":"21"},{"size":871,"mtime":1611089547707,"results":"28","hashOfConfig":"21"},{"size":657,"mtime":1610850645610,"results":"29","hashOfConfig":"21"},{"size":2346,"mtime":1611001143837,"results":"30","hashOfConfig":"21"},{"size":704,"mtime":1611090729970,"results":"31","hashOfConfig":"21"},{"size":176,"mtime":1610845159310,"results":"32","hashOfConfig":"21"},{"size":3091,"mtime":1611087766006,"results":"33","hashOfConfig":"21"},{"size":1020,"mtime":1611000541608,"results":"34","hashOfConfig":"21"},{"size":1149,"mtime":1611000524885,"results":"35","hashOfConfig":"21"},{"size":1230,"mtime":1611002947309,"results":"36","hashOfConfig":"21"},{"size":2120,"mtime":1611154211711,"results":"37","hashOfConfig":"21"},{"size":779,"mtime":1611110323874,"results":"38","hashOfConfig":"21"},{"size":1260,"mtime":1611102433836,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11fgsaq",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/metrio/RareRecordsFrontend/src/App.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/RecordCard.js",["84"],"import React from 'react'\n\n\nclass RecordCard extends React.Component {\n    \n    state = {\n        wishlist: false,\n        condition: \"\"\n    }\n\n    wishlistHandler = (e) => {\n        e.preventDefault()\n\n        const prevState = this.state.wishlist\n        this.setState({wishlist: !prevState})\n    }\n\n    changeHandler = (e) => {\n        const prevState = this.state\n        this.setState({condition: e.target.value}) \n    }\n\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        const title = this.seperateDetails()\n        const artist = title[0]\n        const record_name = title[1]\n        const record = this.props.recordObj\n\n        const wishlistObj = {\n            artist_name: artist,\n            record_name: record_name,\n            discogs_id: record.master_id,\n            img_url: record.cover_image,\n            thumb_url: record.thumb,\n            year_of_release: parseInt(record.year),\n            notes: this.state.condition,\n            resource_url: record.resource_url\n        }\n\n        this.props.submitHandler(wishlistObj)\n    \n    }\n\n    seperateDetails = () => {\n        const title = this.props.recordObj.title.split(\" - \")\n        \n        return title\n    }\n\n    render(){\n        const title = this.seperateDetails()\n        const artist = title[0]\n        const record_name = title[1]\n        const record = this.props.recordObj\n\n        return(\n            <div className=\"recordCard-div\">\n                <h4>Artist: {artist}</h4>\n                <h4>Record: {record_name}</h4>\n                <img src={record.cover_image} alt={record.title} style={{width:'auto', height:'125px'}}/>\n                <h6>Year of Release: {record.year}</h6>\n                <button onClick={this.wishlistHandler}>Want to add to Wishlist?</button>\n                {this.state.wishlist \n                ? \n                <form onSubmit={this.submitHandler}>\n                    <label>What condition would you like the record?</label>\n                    <input type=\"text\" name=\"condition\" placeholder= \"ie Mint, Fair, Near Mint\" value={this.state.condition} onChange={this.changeHandler}/>\n                    <button>Add to Wishlist</button>\n                </form>\n                \n                : null}\n            </div>\n        )\n    }\n}\n\nexport default RecordCard","/Users/metrio/RareRecordsFrontend/src/Components/SearchForm.js",[],"/Users/metrio/RareRecordsFrontend/src/index.js",[],["85","86"],"/Users/metrio/RareRecordsFrontend/src/Redux/rootReducer.js",[],"/Users/metrio/RareRecordsFrontend/src/reportWebVitals.js",[],["87","88"],"/Users/metrio/RareRecordsFrontend/src/Redux/actions.js",["89","90","91"],"import { ADD_TO_WISHLIST , REMOVE_FROM_WISHLIST, ADD_TO_RECORDS, UPDATE_RECORD_DETAILS , SET_RECORDS, SET_WISHLIST, LOG_IN, SIGN_UP, LOG_OUT, RETURNING, DELETE_USER, EDIT_USER, RECORD_DETAILS} from './actionTypes'\nimport {URL} from '../index'\n\n\nexport function loginUser(userObj) {\n  return function(dispatch, getState){\n      fetch(`${URL}/login`, {\n          method: \"POST\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n          .then(r => r.json())\n          .then(checkedUserObj => {\n              localStorage.setItem(\"token\", checkedUserObj.jwt)        \n              dispatch({type: LOG_IN, payload: checkedUserObj.user})\n\n          })\n          .catch(console.log)\n  }\n}\n\n\nexport function signupUser(userObj) {\n  return function (dispatch, getState) {\n      fetch(`${URL}/users`, {\n          method: \"POST\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n          .then(r => r.json())\n          .then(newUserObj => {\n              localStorage.setItem(\"token\", newUserObj.jwt)\n              dispatch({type: SIGN_UP, payload: newUserObj.user})\n          })\n          .catch(console.log)\n  }\n}\n\n  export function returningUser(userObj) {\n    const wishlistRecords = userObj.records\n    return dispatch => {\n        dispatch({type: RETURNING, payload: userObj}) \n        dispatch(setWishlist(wishlistRecords))\n        }\n    } \n\n\nexport function deleteUser(userId){\n  return function (dispatch){\n      fetch(`${URL}/users/${userId}`, {\n          method: \"DELETE\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\",\n              \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\")\n          }\n      })\n      .then(r=>r.json())\n      .then(response => {\n          console.log(response)\n          localStorage.clear()\n          dispatch({type: DELETE_USER})\n      })\n  }\n}\n\nexport function editUser(userObj, userId){\n  return function (dispatch){\n      fetch(`${URL}/users/${userId}`, {\n          method: \"PATCH\",\n          headers: {\n              \"Accepts\": \"application/json\",\n              \"Content-type\": \"application/json\",\n              \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({ user: userObj })\n      })\n      .then(r=>r.json())\n      .then(returnedUser => {\n          console.log(returnedUser)\n          dispatch({type: EDIT_USER, payload: returnedUser.user})\n      })\n  }\n}\n\nexport function loggingOut(){\n  return { type: LOG_OUT}\n}\n\n\n\nexport function addtoWishlist(userId, wishlist, recordDetails) {\n    return function (dispatch, getState) {\n\n        let wishlistId = localStorage.getItem(\"wishlistId\")\n        \n            fetch(`${URL}/users/${userId}/wishlists/`, {\n                method: \"POST\",\n                headers: {\n                    \"Accepts\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: parseInt(userId),\n                    discogs_id: parseInt(wishlist.discogs_id) ,\n                    record_id: parseInt(wishlist.record_id) ,\n                    notes: wishlist.notes\n                })\n            })\n            .then(r => r.json())\n            .then(wishlistObj => {\n                dispatch({type: ADD_TO_WISHLIST, payload: recordDetails})\n            })\n        }\n    }\n\nexport function removeFromWishlist(userId, wishlistId) {\n    return function(dispatch, getState) {\n        fetch(`${URL}/users/${userId}/wishlists/${wishlistId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            dispatch({type: SET_WISHLIST})\n            console.log(resp)\n        })\n    }\n}\n\nexport function setWishlist(wishlistRecords) {\n    return function (dispatch, getState){\n            dispatch({type: REMOVE_FROM_WISHLIST, payload: wishlistRecords})\n    }\n\n}\n\n\nexport function setRecords() {\n    return function (dispatch, getState){\n        fetch(`${URL}/records`,{\n            method: \"GET\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(r=> r.json())\n            .then(records => {\n               localStorage.setItem(\"recordId\", records.id)\n              return dispatch({type: SET_RECORDS, payload: records})\n           })\n        \n    }\n}\n\nexport function recordDetails(discogs_id) {\n\n    return function (dispatch, getState){\n       const token = process.env.REACT_APP_DISCOGS_API_KEY\n        fetch(`https://api.discogs.com/masters/${discogs_id}`)\n        .then(resp => resp.json())\n        .then(details => {\n            console.log(details)\n            return dispatch({type: RECORD_DETAILS, payload: details})\n        })\n    }\n}\n        \n\nexport function addtoRecords(recordObj) {\n    return function (dispatch, getState) {\n\n        fetch(`${URL}/records`, {\n            method: \"POST\",\n            headers: {\n                \"Accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                album_name: recordObj.record_name,\n                artist_name: recordObj.artist_name,\n                discogs_id: recordObj.discogs_id,\n                thumb_url: recordObj.thumb_url,\n                img_url: recordObj.img_url,\n                year_of_release: recordObj.year_of_release\n            })\n        })\n        .then(r => r.json())\n        .then(record => {\n            return dispatch({type: ADD_TO_RECORDS, payload: record})\n        })\n        \n    }\n}\n\n","/Users/metrio/RareRecordsFrontend/src/Redux/actionTypes.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordStore.js",["92","93","94","95"],"import React from 'react';\nimport SearchForm from '../Components/SearchForm';\nimport RecordCard from '../Components/RecordCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n\nclass RecordStore extends React.Component {\n\n    \n\n    render () {\n      \n    \n        return (\n          \n          <div>\n              <h1>Rare Records Store</h1>\n              \n          </div>\n            \n        )\n      } \n    }\n\n    function msp(state) {\n        return {\n          user: state.user,\n          wishlists: state.wishlists,\n          records: state.records\n        }\n      }\n\nexport default connect(msp)(RecordStore);","/Users/metrio/RareRecordsFrontend/src/Components/NavBar.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/Profile.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/HomePage.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/RecordDiscogsSearchContainer.js",["96","97"],"/Users/metrio/RareRecordsFrontend/src/Components/LogInForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/SignUpForm.js",[],["98","99"],"/Users/metrio/RareRecordsFrontend/src/Components/EditForm.js",[],"/Users/metrio/RareRecordsFrontend/src/Containers/Wishlist.js",["100","101"],"/Users/metrio/RareRecordsFrontend/src/Components/WishlistCards.js",[],"/Users/metrio/RareRecordsFrontend/src/Components/RecordDetails.js",[],{"ruleId":"102","severity":1,"message":"103","line":19,"column":15,"nodeType":"104","messageId":"105","endLine":19,"endColumn":24},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"102","severity":1,"message":"112","line":1,"column":66,"nodeType":"104","messageId":"105","endLine":1,"endColumn":87},{"ruleId":"102","severity":1,"message":"113","line":101,"column":13,"nodeType":"104","messageId":"105","endLine":101,"endColumn":23},{"ruleId":"102","severity":1,"message":"114","line":169,"column":14,"nodeType":"104","messageId":"105","endLine":169,"endColumn":19},{"ruleId":"102","severity":1,"message":"115","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"116","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"117","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":15},{"ruleId":"102","severity":1,"message":"118","line":4,"column":17,"nodeType":"104","messageId":"105","endLine":4,"endColumn":23},{"ruleId":"102","severity":1,"message":"117","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":15},{"ruleId":"102","severity":1,"message":"118","line":4,"column":17,"nodeType":"104","messageId":"105","endLine":4,"endColumn":23},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"102","severity":1,"message":"117","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":15},{"ruleId":"102","severity":1,"message":"118","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":23},"no-unused-vars","'prevState' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"'UPDATE_RECORD_DETAILS' is defined but never used.","'wishlistId' is assigned a value but never used.","'token' is assigned a value but never used.","'SearchForm' is defined but never used.","'RecordCard' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.",["121"],["122"],"no-global-assign","no-unsafe-negation"]